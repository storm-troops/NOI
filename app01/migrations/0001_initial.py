# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-09-07 15:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answerrecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.IntegerField(choices=[(0, '通过'), (1, '未通过'), (2, '超时')], default=0, verbose_name='答题结果')),
                ('score', models.PositiveIntegerField(blank=True, null=True, verbose_name='分数')),
                ('length', models.FloatField(blank=True, default=True, verbose_name='代码长度')),
                ('language', models.IntegerField(choices=[(0, 'C'), (1, 'C++'), (2, 'Java'), (3, 'Python'), (4, 'GO'), (5, 'PHP')], default=0, verbose_name='编程语言')),
                ('submit_or_timeout_datetime', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
            ],
            options={
                'verbose_name_plural': '08.答题记录表',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='类别')),
            ],
            options={
                'verbose_name_plural': '05.题目类别表',
            },
        ),
        migrations.CreateModel(
            name='Examination_details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rubric_number', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='题目编号')),
                ('rubric_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='题目名称')),
                ('rubric_describe', models.CharField(blank=True, max_length=128, null=True, verbose_name='题目描述')),
                ('input_text', models.CharField(blank=True, max_length=64, null=True, verbose_name='输入说明')),
                ('examination_status', models.IntegerField(choices=[(0, '未审核'), (1, '已审核')], default=0, verbose_name='审核状态')),
                ('memory', models.CharField(blank=True, max_length=32, null=True, verbose_name='内存')),
                ('time_bar', models.CharField(blank=True, max_length=32, null=True, verbose_name='时间限制')),
                ('sample_input', models.CharField(blank=True, max_length=336, null=True, verbose_name='样例输入')),
                ('sample_out', models.CharField(blank=True, max_length=336, null=True, verbose_name='样例输出')),
                ('review_code', models.CharField(blank=True, max_length=128, null=True, verbose_name='评测源码')),
                ('difficulty', models.IntegerField(choices=[(0, '初级'), (1, '中级'), (2, '高级')], default=0, verbose_name='难度')),
                ('hint', models.CharField(max_length=64, verbose_name='题目提示')),
            ],
            options={
                'verbose_name_plural': '07.题目详情表',
            },
        ),
        migrations.CreateModel(
            name='Examination_Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('examination_count', models.IntegerField(verbose_name='答题总数量')),
                ('pass_count', models.IntegerField(verbose_name='答题通过数量')),
            ],
            options={
                'verbose_name_plural': '09.用户答题记录情况表',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='菜单')),
                ('icon', models.CharField(max_length=32, verbose_name='图标')),
            ],
            options={
                'verbose_name_plural': '03.菜单表',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='标题')),
                ('url', models.CharField(max_length=128, unique=True, verbose_name='含正则的URL')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='代码')),
                ('menu', models.ForeignKey(blank=True, help_text='null表示非菜单', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app01.Menu', verbose_name='菜单')),
                ('pid', models.ForeignKey(blank=True, help_text='对于无法作为菜单的URL，可以为其选择一个可以作为菜单的权限，那么访问时，则默认选中此权限', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ps', to='app01.Permission', verbose_name='默认选中权限')),
            ],
            options={
                'verbose_name_plural': '04.权限表',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='角色名称')),
                ('permissions', models.ManyToManyField(blank=True, to='app01.Permission', verbose_name='拥有的所有权限')),
            ],
            options={
                'verbose_name_plural': '02.角色表',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='标签名称')),
            ],
            options={
                'verbose_name_plural': '06.标签表',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=32, null=True, verbose_name='用户名')),
                ('password', models.CharField(blank=True, max_length=64, null=True, verbose_name='密码')),
                ('email', models.CharField(blank=True, max_length=32, null=True, verbose_name='邮箱')),
                ('roles', models.ManyToManyField(blank=True, to='app01.Role', verbose_name='拥有的所有角色')),
            ],
            options={
                'verbose_name_plural': '01.用户表',
            },
        ),
        migrations.AddField(
            model_name='examination_record',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.UserInfo', verbose_name='用户id'),
        ),
        migrations.AddField(
            model_name='examination_details',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.UserInfo', verbose_name='出题人'),
        ),
        migrations.AddField(
            model_name='examination_details',
            name='rubric_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Category', verbose_name='题目类型'),
        ),
        migrations.AddField(
            model_name='examination_details',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Tag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='answerrecord',
            name='question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app01.Examination_details', verbose_name='关联题目表'),
        ),
        migrations.AddField(
            model_name='answerrecord',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app01.UserInfo', verbose_name='关联用户表'),
        ),
    ]
